'use client'
import type { Metadata } from "next";
import localFont from "next/font/local";
import "./globals.css";
import { ArrowUp, Search } from "lucide-react";
import { Input } from "@/components/ui/input";
import { useState } from "react";
import { useRouter } from "next/navigation"


const geistSans = localFont({
  src: "./fonts/GeistVF.woff",
  variable: "--font-geist-sans",
  weight: "100 900",
});
const geistMono = localFont({
  src: "./fonts/GeistMonoVF.woff",
  variable: "--font-geist-mono",
  weight: "100 900",
});

// export const metadata: Metadata = {
//   title: "Create Next App",
//   description: "Generated by create next app",
// };

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const [searchQuery,setSearchQuery] = useState('')
  const router = useRouter();

  const handleButtonClick = () => {
    router.push('/');
  };

  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        
      {/* Top Navigation */}
      <header className="border-b">
        <div className="container mx-auto px-4 py-3">
          <div className="flex items-center justify-between">
            <div className="flex items-center space-x-4">
              <button className="font-bold text-xl" onClick={handleButtonClick}>agentscan</button>
              <div className="flex items-center text-green-600">
                <span>$OLAS: $1.24</span>
                <ArrowUp className="h-4 w-4 ml-1" />
                <span className="text-sm ml-1">2.5%</span>
              </div>
            </div>
            <div className="flex items-center space-x-2 flex-1 max-w-xl mx-4">
              <div className="relative flex-1">
                <Search className="absolute left-2 top-2.5 h-4 w-4 text-muted-foreground" />
                <Input
                  placeholder="Search by agent ID / service name..."
                  className="pl-8"
                  value={searchQuery}
                  onChange={(e) => setSearchQuery(e.target.value)}
                />
              </div>
            </div>
          </div>
        </div>
      </header>
        {children}
      </body>
    </html>
  );
}
